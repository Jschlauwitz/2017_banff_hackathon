subplot(3,1,1)
for i = 2:17
    plot(y(1,:),y(i,:)); hold all
end
title('EEG Signals')
xlabel('t (ms)')
ylabel('V (uV)')

subplot(3,1,2)
plot(y(1,:),y(18,:))
title('Events')
xlabel('t (ms)')
ylabel('Event Membership')

Fs = 256;             % Sampling frequency                    
T = 1/Fs;             % Sampling period
L = length(y);        % Length of signal
t = y(1,:);

for j = 2:17
    Y = fft(y(j,:));

    P2 = abs(Y/L);
    P1 = P2(1:L/2+1);
    P1(2:end-1) = 2*P1(2:end-1);
    f = Fs*(0:(L/2))/L;
    subplot(3,1,3)
    plot(f,P1); hold all
    title('Single-Sided Amplitude Spectrum of X(t)')
    xlabel('f (Hz)')
    ylabel('|P1(f)|')
end

function Hd = HPF
%HPF Returns a discrete-time filter object.

% MATLAB Code
% Generated by MATLAB(R) 9.2 and the Signal Processing Toolbox 7.4.
% Generated on: 07-Oct-2017 14:30:52

% Equiripple Highpass filter designed using the FIRPM function.

% All frequency values are in Hz.
Fs = 50;  % Sampling Frequency

Fstop = 10;               % Stopband Frequency
Fpass = 20;               % Passband Frequency
Dstop = 0.0031622776602;  % Stopband Attenuation
Dpass = 0.057501127785;   % Passband Ripple
dens  = 20;               % Density Factor

% Calculate the order from the parameters using FIRPMORD.
[N, Fo, Ao, W] = firpmord([Fstop, Fpass]/(Fs/2), [0 1], [Dstop, Dpass]);

% Calculate the coefficients using the FIRPM function.
b  = firpm(N, Fo, Ao, W, {dens});
Hd = dfilt.dffir(b);

% [EOF]
end